diff --git a/Users/michael/Projects/oss/claude-transcript/convert-claude-history.ts b/Users/michael/Projects/oss/claude-transcript/convert-claude-history.ts
index 1234567..abcdefg 100644
--- a/Users/michael/Projects/oss/claude-transcript/convert-claude-history.ts
+++ b/Users/michael/Projects/oss/claude-transcript/convert-claude-history.ts
@@ -15,6 +15,52 @@
   toolUseResult?: any;
 }
 
+function handleLargeContent(content: string, filePath?: string): { content: string; savedPath?: string } {
+  const lines = content.split('\n');
+  const lineCount = lines.length;
+  
+  // If 12 lines or fewer, return as is
+  if (lineCount <= 12) {
+    return { content };
+  }
+  
+  // Truncate to 8 lines
+  const truncatedLines = lines.slice(0, 8);
+  const remainingLines = lineCount - 8;
+  
+  // Generate hash for filename
+  const hash = createHash('md5').update(content).digest('hex').substring(0, 8);
+  
+  // Extract extension from filePath if provided
+  let extension = '';
+  if (filePath) {
+    const ext = filePath.split('.').pop();
+    if (ext && ext !== filePath) {
+      extension = `.${ext}`;
+    }
+  }
+  
+  // Create filename with hash
+  const filename = `${filePath ? basename(filePath, extension).replace(/[^a-zA-Z0-9-_]/g, '_') + '-' : ''}${hash}${extension}`;
+  const savedPath = join('contents', filename);
+  
+  // Ensure contents directory exists
+  if (!existsSync('contents')) {
+    mkdirSync('contents', { recursive: true });
+  }
+  
+  // Save full content to file
+  writeFileSync(savedPath, content);
+  
+  // Add truncation notice with link
+  truncatedLines.push(`... +${remainingLines} lines ([view file](${savedPath}))`);
+  
+  return { 
+    content: truncatedLines.join('\n'),
+    savedPath
+  };
+}
+
 function getLanguageFromExtension(ext: string): string {
   const languageMap: { [key: string]: string } = {
     // JavaScript/TypeScript